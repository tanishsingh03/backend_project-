// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// -------------------------------------
// Users Table (Customers)
// -------------------------------------
model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  address   String?
  phone     String? 
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// -------------------------------------
// Restaurants Table
// -------------------------------------
model Restaurant {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  address   String
  phone     String?
  menu      MenuItem[]
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// -------------------------------------
// Menu Items
// -------------------------------------
model MenuItem {
  id            Int      @id @default(autoincrement())
  name          String
  price         Float
  restaurantId  Int
  restaurant    Restaurant @relation(fields: [restaurantId], references: [id])
  orderItems    OrderItem[]
}

// -------------------------------------
// Orders
// -------------------------------------
model Order {
  id           Int       @id @default(autoincrement())
  orderNumber  String    @unique
  userId       Int
  restaurantId Int
  totalPrice   Float
  status       String    @default("PENDING")
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  user         User       @relation(fields: [userId], references: [id])
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  items        OrderItem[]
}

// -------------------------------------
// Order Items
// -------------------------------------
model OrderItem {
  id         Int      @id @default(autoincrement())
  orderId    Int
  menuItemId Int
  quantity   Int
  order      Order    @relation(fields: [orderId], references: [id])
  menuItem   MenuItem @relation(fields: [menuItemId], references: [id])
}
